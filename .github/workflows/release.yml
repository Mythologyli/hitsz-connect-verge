name: build

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"

  pull_request:
    branches: [ "main" ]

jobs:
  build:
    permissions: write-all
    strategy:
      matrix:
        include:
          - os: windows-latest
            os_name: windows
            arch: x64
          - os: windows-latest
            os_name: windows
            arch: arm64
          - os: macos-latest
            os_name: darwin
            arch: x64
          - os: macos-latest
            os_name: darwin
            arch: arm64
          - os: ubuntu-24.04
            os_name: linux
            arch: x64
          - os: ubuntu-24.04
            os_name: linux
            arch: arm64
            
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Executable (macOS)
      if: runner.os == 'macOS'
      run: |
        mv core/zju-connect-${{ matrix.os_name }}-${{ matrix.arch }} core/zju-connect
        pyinstaller --clean --onefile --noconsole --windowed \
          --add-data "assets:assets" \
          --add-data "utils:utils" \
          --add-data "core/zju-connect:core" \
          --add-data ".app-version:." \
          --icon assets/icon.icns \
          -n hitsz-connect-verge main.py

    - name: Create DMG (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install create-dmg
        create-dmg \
          --volname "HITSZ Connect Verge" \
          --background "assets/bg.svg" \
          --window-pos 400 200 \
          --window-size 660 400 \
          --icon-size 100 \
          --icon "hitsz-connect-verge.app" 160 185 \
          --app-drop-link 500 185 \
          "dist/hitsz-connect-verge-${{ matrix.os_name }}-${{ matrix.arch }}.dmg" \
          "dist/hitsz-connect-verge.app"

    - name: Build Executable (Windows)
      if: runner.os == 'Windows'
      run: |
        Rename-Item -Path core\zju-connect-${{ matrix.os_name }}-${{ matrix.arch }}.exe -NewName zju-connect.exe
        pyinstaller --clean --onefile --noconsole `
          --add-data "assets;assets" `
          --add-data "utils;utils" `
          --add-data "core\zju-connect.exe;core" `
          --add-data ".app-version;." `
          --icon assets/icon.ico `
          -n hitsz-connect-verge-${{ matrix.arch }} main_fluent.py

    - name: Build Executable (Linux)
      if: runner.os == 'Linux'
      run: |
        mv core/zju-connect-${{ matrix.os_name }}-${{ matrix.arch }} core/zju-connect
        pyinstaller --onefile --noconsole --windowed --clean \
          --add-data "assets:assets" \
          --add-data "utils:utils" \
          --add-data "core/zju-connect:core" \
          --add-data ".app-version:." \
          --icon assets/icon.png \
          -n hitsz-connect-verge main.py

    - name: Zip Linux Executable
      if: runner.os == 'Linux'
      run: |
        cd dist
        zip -r hitsz-connect-verge-${{ matrix.os_name }}-${{ matrix.arch }}.zip hitsz-connect-verge

    - name: Archive Executable
      uses: actions/upload-artifact@v4
      with:
        name: hitsz-connect-verge-${{ matrix.os_name }}-${{ matrix.arch }}
        path: |
          ${{ runner.os == 'Windows' && format('dist/hitsz-connect-verge-{0}.exe', matrix.arch) || (runner.os == 'macOS' && format('dist/*.dmg') || 'dist/*.zip') }}
          

  release:
    permissions: write-all
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-24.04

    steps:
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        pattern: hitsz-connect-verge-*
        merge-multiple: true

    - name: Publish Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "artifacts/*"
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
